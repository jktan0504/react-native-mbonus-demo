import React, { Component } from 'react';
import { AsyncStorage, Alert, View, Dimensions, Image, FlatList } from 'react-native';
import { connect } from 'react-redux';
import { Container, Header, Title, Content, Footer,
    FooterTab, Button, Left, Right, Body, Icon, Text, Item } from 'native-base';
import { ASYNCTORAGE_USER_TOKEN, CLR_DARK_TIFFANY_BLUE } from '../../../../utility/constants';
import MainHeader from '../../../commons/Header/MainHeader';
import { tokenManagerCheckLogin, tokenManagerGetAccessToken
} from '../../../../controllers/actions';
import { checkUserLogin, getUserAccessToken
} from '../../../../controllers/actions/AsyncStorage/MBonusAsyncStorage';
import { getAllMerchantList,
} from '../../../../utility/networking/MBonusAuthServices';
// localize
import { strings } from '../../../../../locales/i18n';

class MerchantMainCompomnent extends Component {

    constructor(props) {
        super(props);
        // AsyncStorage.clear();
        this.state = {
            userLogin: false,
            user_access_token: '',
            seed: 1,
            page: 1,
            results: 20,
            merchantLists: [],
            users: [],
            isLoading: false,
            isRefreshing: false,
        };
    }

    componentDidMount() {
        tokenManagerCheckLogin()
            .then(res => this.setState({ userLogin: res }))
            .catch(err => alert("An error occurred"));
        tokenManagerGetAccessToken()
            .then(res => this.setState({ user_access_token: res }))
            .catch(err => alert("An error occurred"));
        // this.loadUsers();
        this.getAllMerchantListService(
            this.props.selected_country_id,
            value
        );
    }

    getAllMerchantListService = (start_item, fetch_length) => {
        const submitParams = {
            start_item,
            fetch_length
        };

        getAllMerchantList(submitParams)
            .then((allMerchantLists) => {
                this.setState({
                    merchantLists: allMerchantLists.data
                });
            })
            .catch((error) => {
                console.log(error);
                this.setState({
                    merchantLists: []
                });
            });
    }

    // Here is just a simple sample
    loadUsers = () => {
        const { users, seed, page, results } = this.state;
        this.setState({ isLoading: true });

        console.log(`running load User with startItem: ${seed} , pageNumber: ${page}`);

        fetch(`https://randomuser.me/api/?seed=${seed}&page=${page}&results=${results}`)
          .then(res => res.json())
          .then(res => {
            this.setState({
              users: page === 1 ? res.results : [...users, ...res.results],
              isRefreshing: false,
            });
          })
          .catch(err => {
            console.error(err);
          });
    };

  handleRefresh = () => {
    this.setState({
      seed: this.state.seed + this.state.results,
      isRefreshing: true,
    }, () => {
        console.log('seed is increasing: ${this.state.seed}');
      this.loadUsers();
    });
  };

    handleLoadMore = () => {

        this.setState({
            page: this.state.page + 1,
            seed: this.state.seed + this.state.results,
        }, () => {
            this.loadUsers();
        });
  };

    render() {
        const { userLogin, user_access_token, users, isRefreshing } = this.state;
        const { merchantTopBtnViewStyle, merchantTopBtnStyle, merchantAroundMeIconStyle,
            merchantTopBtnTextStyle,
        } = styles;
        return (
            <Container>
                <MainHeader
                    navigation={this.props.navigation}
                />
                <View style={{ flex: 0.3, flexDirection: 'column', justifyContent: 'flex-start' }}>
                    <Item style={merchantTopBtnViewStyle}>
                        <Button
                            style={merchantTopBtnStyle}
                        >
                            <View style={{ flex: 0.3, }}>
                            <Icon>
                                <Image
                                    source={require('../../../../assets/images/merchant/merchant_around_me.png')}
                                    style={merchantAroundMeIconStyle}
                                />
                            </Icon>
                            </View>
                            <View style={{ flex: 0.7 }}>
                                <Text
                                    style={merchantTopBtnTextStyle}
                                >
                                    {strings('merchant.merchant_around_me')}
                                </Text>
                            </View>

                        </Button>
                    </Item>
                    <Item style={merchantTopBtnViewStyle}>
                        <Button
                            style={merchantTopBtnStyle}
                        >
                            <View style={{ flex: 0.2 }}>
                            <Icon>
                                <Image
                                    source={require('../../../../assets/images/merchant/country_search.png')}
                                    style={merchantAroundMeIconStyle}
                                />
                            </Icon>
                            </View>
                            <View style={{ flex: 0.8 }}>
                                <Text
                                    style={merchantTopBtnTextStyle}
                                >
                                    {strings('merchant.merchant_search')}
                                </Text>
                            </View>

                        </Button>
                    </Item>
                </View>
                <View style={{ flex: 0.8 }}>
                    <FlatList
                        data={users}
                        renderItem={({ item }) => (
                            <View>
                                <View style={{ flex: 1, flexDirection: 'column' }}>
                                    <Text>{ item.name.first }</Text>
                                    <Text>{ item.email }</Text>
                                </View>
                                <View>
                                <Image
                                    source={{ uri: item.picture.thumbnail }}
                                    style={merchantAroundMeIconStyle}
                                />
                                </View>
                            </View>

                          )}
                          keyExtractor={i => i.email}
                          refreshing={isRefreshing}
                          onRefresh={this.handleRefresh}
                          onEndReached={this.handleLoadMore}
                          onEndThreshold={0}
                    />
                </View>
            </Container>
        );
    }
}

const styles = {
    merchantTopBtnViewStyle: {
        flex: 1,
        paddingLeft: 10,
        paddingRight: 10,
        paddingTop: 10,
        paddingBottom: 10,
        borderBottomWidth: 0,
        justifyContent: 'center',

    },
    merchantTopBtnStyle: {
        flex: 1,
        backgroundColor: CLR_DARK_TIFFANY_BLUE,
    },
    merchantAroundMeIconStyle: {
        width: 35,
        height: 35,
    },
    merchantTopBtnTextStyle: {
        fontSize: 18,
        fontWeight: 'bold',
    },

};

const mapStateToProps = state => {
    return {

    };
};

export default connect(mapStateToProps, {
    tokenManagerCheckLogin
 })(MerchantMainCompomnent);
